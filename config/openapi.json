{
  "openapi": "3.0.0",
  "info": {
    "title": "Example API",
    "version": "1.0.0",
    "description": "Example API for MCP integration"
  },
  "servers": [
    {
      "url": "https://api.saas.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "operationId": "listItems",
        "summary": "List all items",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of items to skip",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "inactive", "archived"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemList"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createItem",
        "summary": "Create a new item",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        }
      }
    },
    "/items/{itemId}": {
      "get": {
        "operationId": "getItem",
        "summary": "Get an item by ID",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The ID of the item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "put": {
        "operationId": "updateItem",
        "summary": "Update an item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The ID of the item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteItem",
        "summary": "Delete an item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The ID of the item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted"
          }
        }
      }
    },
    "/items/search": {
      "post": {
        "operationId": "searchItems",
        "summary": "Search for items",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemList"
                }
              }
            }
          }
        }
      }
    },
    "/items/bulk": {
      "post": {
        "operationId": "bulkUpdateItems",
        "summary": "Bulk update multiple items",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk update results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "description": "Item description"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "archived"],
            "description": "Item status"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ItemList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of items"
          },
          "limit": {
            "type": "integer",
            "description": "Number of items per page"
          },
          "offset": {
            "type": "integer",
            "description": "Number of items skipped"
          }
        }
      },
      "CreateItemRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "description": "Item description"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive"],
            "default": "active"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata"
          }
        }
      },
      "UpdateItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "description": "Item description"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "archived"]
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata"
          }
        }
      },
      "SearchRequest": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query"
          },
          "filters": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": ["active", "inactive", "archived"]
              },
              "created_after": {
                "type": "string",
                "format": "date-time"
              },
              "created_before": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          }
        }
      },
      "BulkUpdateRequest": {
        "type": "object",
        "required": ["ids", "updates"],
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of item IDs to update"
          },
          "updates": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": ["active", "inactive", "archived"]
              },
              "metadata": {
                "type": "object"
              }
            }
          }
        }
      },
      "BulkUpdateResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "integer",
            "description": "Number of items updated"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}